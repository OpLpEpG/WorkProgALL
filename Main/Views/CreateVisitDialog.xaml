<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Main.Views"
        xmlns:res="clr-namespace:Main.Properties"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Class="Main.Views.CreateVisitDialog"
        WindowStartupLocation="CenterOwner"
        mc:Ignorable="d"
        Title="{x:Static res:Resources.wFileSaveDialogTitle}"
        MinWidth="800"
        Height="550"
        Width="800">
    <Window.DataContext>
        <local:CreateVisitDialogVM />
    </Window.DataContext>
    <Grid>
        <Grid.Resources>
            <local:BoolToVisibilityConverter x:Key="BoolToVisibility" />
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin"
                        Value="8,15" />
                <Setter Property="Width"
                        Value="100" />
                <Setter Property="Height"
                        Value="24" />
            </Style>
            
            <Style x:Key="allbox" >
                <Setter Property="Control.Width"
                        Value="600" />
                <Setter Property="Control.HorizontalAlignment"
                        Value="Left" />
                <Setter Property="Control.Margin"
                        Value="40,10,10,10" />
                <Setter Property="Control.Height"
                        Value="24" />
            </Style>
            
            <Style x:Key="WtBox" BasedOn="{StaticResource allbox}">
                <Setter Property="xctk:WatermarkComboBox.Watermark"
                        Value="Необходимо выбрать расположение" />

            </Style>
            <Style x:Key="ValidationTextBoxErrorStyle"
                   BasedOn="{StaticResource allbox}"
                   TargetType="{x:Type xctk:WatermarkTextBox}">
                <Style.Triggers>
                    
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}"
                                       Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.HasError)}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <Border BorderBrush="Red"
                                                BorderThickness="1">
                                            <AdornedElementPlaceholder x:Name="placeholder" />
                                        </Border>
                                        <TextBlock FontSize="11"
                                                   FontStyle="Italic"
                                                   Foreground="Red"
                                                   Text="{Binding [0].ErrorContent}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="vg"
                   BasedOn="{StaticResource ValidationTextBoxErrorStyle}"
                   TargetType="{x:Type xctk:WatermarkTextBox}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=cbiVisitOnly, Path=IsSelected}"
                                 Value="True">
                        <Setter Property="IsEnabled"
                                Value="False" />
                        <Setter Property="Foreground"
                                Value="LightGray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            
            <Style TargetType="CheckBox">
                <Setter Property="IsEnabled"
                        Value="{Binding cbIsEnabled, Mode=TwoWay}" />
                <Setter Property="IsChecked"
                        Value="{Binding cbIsChecked, Mode=TwoWay}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=cbiVisitOnly, Path=IsSelected}"
                                 Value="True">
                        <Setter Property="IsEnabled"
                                Value="False" />
                        <Setter Property="IsChecked"
                                Value="False" />
                        <Setter Property="Foreground"
                                Value="LightGray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="TextBloGroup"
                   TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=cbiVisitOnly, Path=IsSelected}"
                                 Value="True">
                        <Setter Property="Foreground"
                                Value="LightGray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <TextBlock Margin="10"
                   FontSize="18"
                   HorizontalAlignment="Left"
                   Text="{x:Static res:Resources.wCreateVisitDialogLabel}" />
        
        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Left">
            <TextBlock Margin="40,10,10,0"
                       Text="Имя заезда" />
            <xctk:WatermarkTextBox x:Name="visitName"
                                   Style="{StaticResource ValidationTextBoxErrorStyle}"
                                   Watermark="Введите название заезда">
                <xctk:WatermarkTextBox.Text>
                    <Binding Path="VisitFile"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ValidateFileNameRule ErrorText="Имя заезда пустое или содержит некорректные символы" />
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:WatermarkTextBox.Text>
            </xctk:WatermarkTextBox>
            <!--<TextBlock Foreground="Red"
                       Text="{Binding ElementName=visitName, Path=(Validation.ErrorTemplate) }" />-->
            <TextBlock Margin="40,10,10,0"
                       Text="Расположение" />

            <StackPanel Orientation="Horizontal">
                <xctk:WatermarkComboBox x:Name="bxPath"
                                        Style="{StaticResource WtBox}"
                                        IsEditable="True"
                                        ItemsSource="{Binding }">
                                        
                </xctk:WatermarkComboBox>
                
                <Button x:Name="btNewPath"
                        Content="..."
                        Margin="0,0,0,0"
                        Width="40"
                        Height="24"
                        Click="btNewPath_Click"/>
            </StackPanel>

            <TextBlock Text="Группа заездов"
                       Margin="40,15,10,0"/>

            <xctk:WatermarkComboBox Style="{StaticResource WtBox}">
                <ComboBoxItem IsSelected="{Binding CurrentGroupSelected}"
                              Content="Добавить в текущую группу заездов" 
                              IsEnabled="{Binding cbiCurrGroupIsEnable}" />
                <ComboBoxItem IsSelected="{Binding NewGroupSelected}"
                              Content="Создать новую группу заездов" />
                <ComboBoxItem x:Name="cbiVisitOnly"
                              IsSelected="{Binding VisitOnlySelected}" 
                              Content="Создать только заезд" />
            </xctk:WatermarkComboBox>
            
            <TextBlock Style="{StaticResource TextBloGroup}" Text="Имя группы заездов"
                       Margin="40,25,10,0" />

            <xctk:WatermarkTextBox x:Name="GroupName"
                                   Style="{StaticResource vg}"
                                   Watermark="Необходимо выбрать название группы заездов">
                <xctk:WatermarkTextBox.Text>
                    <Binding Path="GroupFile"                             
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ValidateFileNameRule ErrorText="Имя группы заездов пустое или содержит некорректные символы" />
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:WatermarkTextBox.Text>
            </xctk:WatermarkTextBox>

            <!--IsEnabled="{Binding cbIsEnabled}"-->
            <!--IsChecked="{Binding cbIsChecked}"
                      Visibility="{Binding cbIsVisible, Converter={StaticResource BoolToVisibility}}"-->

            <CheckBox Content="Группа заездов и заезд в одном каталоге"
                      Margin="40,10,10,0">
            </CheckBox>
            
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Заезд будет создан в:"
                           Margin="40,25,10,0" />
                <TextBlock Margin="10,25,10,0">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}\{1}\{2}">
                            <Binding Path="Text"
                                     ElementName="bxPath" />
                            <Binding Path="Text"
                                     ElementName="GroupName" />
                            <Binding Path="Text"
                                     ElementName="visitName" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                    
            </StackPanel>
            
        </StackPanel>
        <StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button x:Name="btSave"
                    TabIndex="1"
                    Content="{x:Static res:Resources.strSave}"
                    Click="btSave_Click" />
            <Button x:Name="btCancel"
                    TabIndex="2"
                    Content="{x:Static res:Resources.strCancel}"
                    Click="btCancel_Click" />
        </StackPanel>

    </Grid>
</Window>
