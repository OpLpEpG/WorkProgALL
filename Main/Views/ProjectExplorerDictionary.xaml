<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="clr-namespace:Main.Views"
                    xmlns:vm="clr-namespace:Main.ViewModels">


    <!--<Style x:Key="VMBaseStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource {x:Type TreeViewItem}}">
    </Style>-->

    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke"
                     Color="#FF818181" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke"
                     Color="#FF27C7F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill"
                     Color="#FFCCEEFB" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke"
                     Color="#FF262626" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill"
                     Color="#FF595959" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke"
                     Color="#FF1CC4F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill"
                     Color="#FF82DFFB" />
    
    <PathGeometry x:Key="TreeArrow"
                  Figures="M0,0 V6 L6,0 z" />
    
    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width"
                Value="16" />
        <Setter Property="Height"
                Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent"
                            Height="16"
                            Padding="5,5,5,5"
                            Width="16">
                        <Path x:Name="ExpandPath"
                              Data="{StaticResource TreeArrow}"
                              Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                              Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterY="3"
                                                 CenterX="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="RenderTransform"
                                    TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterY="3"
                                                     CenterX="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VMBaseStyle"
           TargetType="{x:Type v:TreeViewItemSubHeader}">
        <!--BasedOn="{StaticResource {x:Type TreeViewItem}}">-->
           
        <Setter Property="IsExpanded"
                Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:TreeViewItemSubHeader}" >
                        <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                            
                        <StackPanel x:Name="sub" Grid.Column="1" 
                                    Grid.ColumnSpan="2"
                                    Grid.Row="1">

                            <ContentPresenter x:Name="PART_SubHeader"
                                              ContentSource="SubHeader"
                                              Content="{TemplateBinding SubHeader}"
                                              ContentTemplate="{TemplateBinding SubHeaderTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </ContentPresenter>
                            
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <!--<Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed" />-->
                            <Setter Property="Visibility"
                                    TargetName="sub"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="PART_Header"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="IsSelectionActive"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="VisitDocumentSubHeader" DataType="{x:Type vm:VisitDocument}">
        <v:VisitUI />
    </DataTemplate>

    <HierarchicalDataTemplate x:Key="VisitDocumentHeader"
                              DataType="{x:Type vm:VisitDocument}"
                              ItemsSource="{Binding Items}">
        <TextBlock Text="{Binding FileName}" />
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="HeaderHelperHeader" 
                              DataType="{x:Type vm:HeaderHelper}"
                              ItemsSource="{Binding Items}">
        <TextBlock Text="{Binding Header}" />
    </HierarchicalDataTemplate>


    <HierarchicalDataTemplate x:Key="TripVMHeader"
                              DataType="{x:Type vm:TripVM}"
                              ItemsSource="{Binding Items}">
            <TextBlock Text="Рейс" Foreground="Red" />
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="TripVMSubHeader"
                  DataType="{x:Type vm:TripVM}">
        <!--<StackPanel Orientation="Vertical">-->
            <!--<TextBlock Text="{Binding trip.Delay}" />-->
            <TextBlock Text="{Binding trip.DTimStart}" />
            <!--<TextBlock Text="{Binding trip.DTimStartDrilling}" />
            <TextBlock Text="{Binding trip.DTimStop}" />
            <TextBlock Text="{Binding trip.DTimStopDrilling}" />-->
        <!--</StackPanel>-->
    </DataTemplate>

    <HierarchicalDataTemplate x:Key="PipeVMHeader"
                              DataType="{x:Type vm:PipeVM}"
                              ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding pipe.Connection.IsOpen}" />
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="BusVMHeader"
                              DataType="{x:Type vm:BusVM}"
                              ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding bus.Name}" />
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="DeviceVMHeader"
                  DataType="{x:Type vm:DeviceVM}">
            <StackPanel>
                <TextBlock Text="Device" />
                <TextBlock Text="{Binding model.Id}" />
            </StackPanel>
    </DataTemplate>

</ResourceDictionary>